# -*- coding: utf-8 -*-
""" auto-generated python script by create_netstate """

# this file contains initial values for physics
# it has to be generated from state_sim.xml automatically later

import gurobipy as gp
from gurobipy import GRB

# Pressure old_old and pressure old in bar
nodes, var_node_p_old_old, var_node_p_old = gp.multidict({
	# innodes
	'N407': [80.41325, 80.41325],
	'N366': [78.01325, 78.01325],
	'N409': [79.22325, 79.22325],
	'N408': [79.82325, 79.82325],
	'N433': [77.65325, 77.65325],
	'N376': [77.40325, 77.40325],
	'N432': [77.71325, 77.71325],
	'N431': [77.77325, 77.77325],
	'N430': [77.83324999999999, 77.83324999999999],
	'N436': [77.46325, 77.46325],
	'N435': [77.52325, 77.52325],
	'N434': [77.59325, 77.59325],
	'N418': [74.90325, 74.90325],
	'B': [77.71325, 77.71325],
	'N428': [77.95325, 77.95325],
	'N429': [77.89325, 77.89325],
	'N410': [78.62325, 78.62325],
	'N322': [80.99325, 80.99325],
	'N415': [76.78325, 76.78325],
	'N416': [76.16325, 76.16325],
	'A': [77.71325, 77.71325],
	'N417': [75.53325, 75.53325],
	'START': [81.01325, 81.01325],
	'START_aux0': [81.01325, 81.01325],
	'START_aux1': [81.01325, 81.01325],
	'START_NDin1': [81.01325, 81.01325],
	'START_NDin2': [81.01325, 81.01325],
	'START_aux2': [81.01325, 81.01325],
	'START_aux3': [81.01325, 81.01325],
	'START_HDin1': [81.01325, 81.01325],
	'START_HDin2': [81.01325, 81.01325],
	'B_aux': [77.71325, 77.71325],
	# entries
	'START_ND': [81.01325, 81.01325],
	'START_HD': [81.01325, 81.01325],
	# exits
	'END': [74.25325, 74.25325]
})

# Flow old_old and flow old of non-pipes in 1000 m³/h
non_pipes, var_non_pipe_Qo_old_old, var_non_pipe_Qo_old = gp.multidict({
	# checkValves
	('START_NDin2', 'START_NDin1'): [0, 0],
	('START_HDin1', 'START_aux3'): [0, 0],
	('B_aux', 'B'): [557.333, 557.333],
	# resistors
	('A', 'B_aux'): [557.333, 557.333]
})


# Flow old_old and flow old for pipes (in and out) in 1000 m³/h
pipes, var_pipe_Qo_in_old_old, var_pipe_Qo_in_old, var_pipe_Qo_out_old_old, var_pipe_Qo_out_old = gp.multidict({
	('N432', 'N433'): [242.666,242.666,242.666,242.666],
	('N431', 'N432'): [242.666,242.666,242.666,242.666],
	('N430', 'N431'): [242.666,242.666,242.666,242.666],
	('N429', 'N430'): [242.666,242.666,242.666,242.666],
	('N436', 'N376'): [242.666,242.666,242.666,242.666],
	('N435', 'N436'): [242.666,242.666,242.666,242.666],
	('N322', 'N407'): [800,800,800,800],
	('N434', 'N435'): [242.666,242.666,242.666,242.666],
	('N433', 'N434'): [242.666,242.666,242.666,242.666],
	('N366', 'A'): [557.334,557.334,557.334,557.334],
	('N428', 'N429'): [242.666,242.666,242.666,242.666],
	('N415', 'N416'): [800,800,800,800],
	('START', 'N322'): [800.006,800.006,800.006,800.006],
	('N416', 'N417'): [800,800,800,800],
	('N417', 'N418'): [800,800,800,800],
	('N418', 'END'): [800,800,800,800],
	('N366', 'N428'): [242.666,242.666,242.666,242.666],
	('B', 'N376'): [557.334,557.334,557.334,557.334],
	('N407', 'N408'): [800,800,800,800],
	('N408', 'N409'): [800,800,800,800],
	('N409', 'N410'): [800,800,800,800],
	('N376', 'N415'): [800,800,800,800],
	('N410', 'N366'): [800,800,800,800],
	('START_aux0', 'START'): [0,0,0,0],
	('START_aux1', 'START_aux0'): [0,0,0,0],
	('START_NDin1', 'START_aux1'): [0,0,0,0],
	('START_ND', 'START_NDin2'): [0,0,0,0],
	('START_aux2', 'START_aux1'): [0,0,0,0],
	('START_aux3', 'START_aux2'): [0,0,0,0],
	('START_HDin2', 'START_HDin1'): [0,0,0,0],
	('START_HD', 'START_HDin2'): [0,0,0,0]
})
