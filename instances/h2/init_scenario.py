# -*- coding: utf-8 -*-
""" auto-generated python script by create_netstate """

# this file contains initial values for physics
# it has to be generated from state_sim.xml automatically later

import gurobipy as gp
from gurobipy import GRB

# Pressure old_old and pressure old in bar
nodes, var_node_p_old_old, var_node_p_old = gp.multidict({
	# innodes
	'A9': [37.89325, 37.89325],
	'A14': [39.44325, 39.44325],
	'A12': [39.44325, 39.44325],
	'S1I': [50.00325, 50.00325],
	'A7': [37.89325, 37.89325],
	'A8': [37.89325, 37.89325],
	'X2': [37.89325, 37.89325],
	'A6': [50.00325, 50.00325],
	'A4': [50.00325, 50.00325],
	'S2I': [39.44325, 39.44325],
	'A5': [50.00325, 50.00325],
	'A13': [39.44325, 39.44325],
	'A2': [36.01325, 36.01325],
	'A11': [39.44325, 39.44325],
	'A1': [36.01325, 36.01325],
	'A3': [50.00325, 50.00325],
	'A10': [39.44325, 39.44325],
	'A15': [36.01325, 36.01325],
	'S2P': [39.44325, 39.44325],
	'S2P_aux0': [39.44325, 39.44325],
	'S2P_aux1': [39.44325, 39.44325],
	'S2P_NDin1': [39.44325, 39.44325],
	'S2P_NDin2': [39.44325, 39.44325],
	'S2P_aux2': [39.44325, 39.44325],
	'S2P_aux3': [39.44325, 39.44325],
	'S2P_HDin1': [39.44325, 39.44325],
	'S2P_HDin2': [39.44325, 39.44325],
	'S1P': [50.00325, 50.00325],
	'S1P_aux0': [50.00325, 50.00325],
	'S1P_aux1': [50.00325, 50.00325],
	'S1P_NDin1': [50.00325, 50.00325],
	'S1P_NDin2': [50.00325, 50.00325],
	'S1P_aux2': [50.00325, 50.00325],
	'S1P_aux3': [50.00325, 50.00325],
	'S1P_HDin1': [50.00325, 50.00325],
	'S1P_HDin2': [50.00325, 50.00325],
	'E1': [36.01325, 36.01325],
	'E1_aux0': [36.01325, 36.01325],
	'E1_aux1': [36.01325, 36.01325],
	'E1_NDin1': [36.01325, 36.01325],
	'E1_NDin2': [36.01325, 36.01325],
	'E1_aux2': [36.01325, 36.01325],
	'E1_aux3': [36.01325, 36.01325],
	'E1_HDin1': [36.01325, 36.01325],
	'E1_HDin2': [36.01325, 36.01325],
	'E2': [40.12325, 40.12325],
	'E2_aux0': [40.12325, 40.12325],
	'E2_aux1': [40.12325, 40.12325],
	'E2_NDin1': [40.12325, 40.12325],
	'E2_NDin2': [40.12325, 40.12325],
	'E2_aux2': [40.12325, 40.12325],
	'E2_aux3': [40.12325, 40.12325],
	'E2_HDin1': [40.12325, 40.12325],
	'E2_HDin2': [40.12325, 40.12325],
	'A7_aux': [50.00325, 50.00325],
	'A10_aux': [39.44325, 39.44325],
	'A15_aux': [36.01325, 36.01325],
	'A14_aux': [39.44325, 39.44325],
	'A2_aux': [36.01325, 36.01325],
	'A3_aux': [50.00325, 50.00325],
	# entries
	'S2P_ND': [NaN, NaN],
	'S2P_HD': [NaN, NaN],
	'S1P_ND': [NaN, NaN],
	'S1P_HD': [NaN, NaN],
	'E1_ND': [NaN, NaN],
	'E1_HD': [NaN, NaN],
	'E2_ND': [NaN, NaN],
	'E2_HD': [NaN, NaN],
	# exits
	'X1': [37.64325, 37.64325]
})

# Flow old_old and flow old of non-pipes in 1000 m³/h
non_pipes, var_non_pipe_Qo_old_old, var_non_pipe_Qo_old = gp.multidict({
	# compressorStations
	('A15', 'A14'): [0, 0],
	('A2', 'A3'): [0, 0],
	# checkValves
	('S2P_NDin2', 'S2P_NDin1'): [0, 0],
	('S2P_HDin1', 'S2P_aux3'): [0, 0],
	('S1P_NDin2', 'S1P_NDin1'): [0, 0],
	('S1P_HDin1', 'S1P_aux3'): [0, 0],
	('E1_NDin2', 'E1_NDin1'): [0, 0],
	('E1_HDin1', 'E1_aux3'): [0, 0],
	('E2_NDin2', 'E2_NDin1'): [0, 0],
	('E2_HDin1', 'E2_aux3'): [0, 0],
	('A7_aux', 'A7'): [0, 0],
	('A10_aux', 'A10'): [112.92, 112.92],
	('A15_aux', 'A14_aux'): [0, 0],
	('A2_aux', 'A3_aux'): [0, 0],
	# resistors
	('A6', 'A7_aux'): [0, 0],
	('A11', 'A10_aux'): [112.92, 112.92]
})


# Flow old_old and flow old for pipes (in and out) in 1000 m³/h
pipes, var_pipe_Qo_in_old_old, var_pipe_Qo_in_old, var_pipe_Qo_out_old_old, var_pipe_Qo_out_old = gp.multidict({
	('A8', 'A9'): [0,0,0,0],
	('A9', 'X1'): [112.92,112.92,112.92,112.92],
	('A14', 'A12'): [0,0,0,0],
	('A5', 'S1I'): [0,0,0,0],
	('A7', 'A8'): [0,0,0,0],
	('A8', 'X2'): [0,0,0,0],
	('A10', 'A9'): [112.919,112.919,112.919,112.919],
	('A4', 'A6'): [0,0,0,0],
	('A13', 'S2P'): [0,0,0,0],
	('A3', 'A4'): [0,0,0,0],
	('A13', 'S2I'): [0,0,0,0],
	('A5', 'S1P'): [0,0,0,0],
	('E1', 'A1'): [0.001,0.001,0.001,0.001],
	('A4', 'A5'): [0,0,0,0],
	('A12', 'A13'): [0,0,0,0],
	('A1', 'A2'): [0,0,0,0],
	('A12', 'A11'): [0,0,0,0],
	('A11', 'E2'): [-112.92,-112.92,-112.92,-112.92],
	('A1', 'A15'): [0,0,0,0],
	('S2P_aux0', 'S2P'): [0,0,0,0],
	('S2P_aux1', 'S2P_aux0'): [0,0,0,0],
	('S2P_NDin1', 'S2P_aux1'): [0,0,0,0],
	('S2P_ND', 'S2P_NDin2'): [0,0,0,0],
	('S2P_aux2', 'S2P_aux1'): [0,0,0,0],
	('S2P_aux3', 'S2P_aux2'): [0,0,0,0],
	('S2P_HDin2', 'S2P_HDin1'): [0,0,0,0],
	('S2P_HD', 'S2P_HDin2'): [0,0,0,0],
	('S1P_aux0', 'S1P'): [0,0,0,0],
	('S1P_aux1', 'S1P_aux0'): [0,0,0,0],
	('S1P_NDin1', 'S1P_aux1'): [0,0,0,0],
	('S1P_ND', 'S1P_NDin2'): [0,0,0,0],
	('S1P_aux2', 'S1P_aux1'): [0,0,0,0],
	('S1P_aux3', 'S1P_aux2'): [0,0,0,0],
	('S1P_HDin2', 'S1P_HDin1'): [0,0,0,0],
	('S1P_HD', 'S1P_HDin2'): [0,0,0,0],
	('E1_aux0', 'E1'): [0,0,0,0],
	('E1_aux1', 'E1_aux0'): [0,0,0,0],
	('E1_NDin1', 'E1_aux1'): [0,0,0,0],
	('E1_ND', 'E1_NDin2'): [0,0,0,0],
	('E1_aux2', 'E1_aux1'): [0,0,0,0],
	('E1_aux3', 'E1_aux2'): [0,0,0,0],
	('E1_HDin2', 'E1_HDin1'): [0,0,0,0],
	('E1_HD', 'E1_HDin2'): [0,0,0,0],
	('E2_aux0', 'E2'): [0,0,0,0],
	('E2_aux1', 'E2_aux0'): [0,0,0,0],
	('E2_NDin1', 'E2_aux1'): [0,0,0,0],
	('E2_ND', 'E2_NDin2'): [0,0,0,0],
	('E2_aux2', 'E2_aux1'): [0,0,0,0],
	('E2_aux3', 'E2_aux2'): [0,0,0,0],
	('E2_HDin2', 'E2_HDin1'): [0,0,0,0],
	('E2_HD', 'E2_HDin2'): [0,0,0,0],
	('A15', 'A15_aux'): [0,0,0,0],
	('A14_aux', 'A14'): [0,0,0,0],
	('A2', 'A2_aux'): [0,0,0,0],
	('A3_aux', 'A3'): [0,0,0,0]
})
